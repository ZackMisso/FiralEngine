cmake_minimum_required (VERSION 2.8.3)
project(firal)

# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)
add_subdirectory(ext/nanogui)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# For debugging purposes
MESSAGE( STATUS "CMAKE_CURRENT_SOURCE_DIR: " ${CMAKE_CURRENT_SOURCE_DIR} )

set(GLFW_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/ext/glfw/include)
set(GLEW_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/ext/glew/include)
set(NANOVG_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/ext/nanovg/src)
set(NANOGUI_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/include)
set(EIGEN_INCLUDE_DIR
  ${CMAKE_CURRENT_SOURCE_DIR}/ext/nanogui/ext/eigen)

# On top of adding the path to nanogui/include, you may need extras
include_directories(
    # Firal Engine include directory
    ${CMAKE_CURRENT_SOURCE_DIR}/include/

    # GLFW library for OpenGL context creation
    ${GLFW_INCLUDE_DIR}

    # GLEW library for accessing OpenGL functions
    ${GLEW_INCLUDE_DIR}

    # Linear algebra library
    ${EIGEN_INCLUDE_DIR}

    # NanoVG drawing library
    #${NANOVG_INCLUDE_DIR}

    # Nanogui include directory
    ${NANOGUI_INCLUDE_DIR}
    ${NANOGUI_EXTRA_INCS}
    ext
)

set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -flto -Wno-unused-result -fno-strict-aliasing -Wlto-type-mismatch")

add_executable(firal
    # Firal engine header files
    include/firal/common.h
    include/firal/bitmap.h
    include/firal/ui.h
    include/firal/camera.h
    include/firal/ray.h
    include/firal/bbox.h
    include/firal/inter.h
    include/firal/mesh.h
    include/firal/sceneobj.h
    include/firal/transform.h
    include/firal/debugui.h
    include/firal/light.h
    include/firal/module.h
    include/firal/scene.h
    include/firal/pointlight.h
    include/firal/orthocamera.h

    # Unit test header files
    include/test/testcase.h
    include/test/harness.h
    include/test/bboxtest.h
    include/test/trianglescene.h

    # Scene editor header files
    include/edit/sceneeditor.h

    # Visual debugger header files
    include/viz/rendvisual.h

    # Firal engine implementation files
    src/firal/main.cpp
    src/firal/bitmap.cpp
    src/firal/ui.cpp
    src/firal/camera.cpp
    src/firal/ray.cpp
    src/firal/bbox.cpp
    src/firal/mesh.cpp
    src/firal/sceneobj.cpp
    src/firal/transform.cpp
    src/firal/debugui.cpp
    src/firal/light.cpp
    src/firal/module.cpp
    src/firal/scene.cpp
    src/firal/pointlight.cpp
    src/firal/orthocamera.cpp

    # Unit test implementation files
    src/test/bboxtest.cpp
    src/test/harness.cpp
    src/test/testcase.cpp
    src/test/trianglescene.cpp

    # Scene editor implementation files
    src/edit/sceneeditor.cpp

    # Visual debugger implementation files
    src/viz/rendvisual.cpp
)

# Lastly, additional libraries may have been built for you.  In addition to linking
# against NanoGUI, we need to link against those as well.
target_link_libraries(firal nanogui ${NANOGUI_EXTRA_LIBS})

#target_link_libraries(firal nanogui ${NANOGUI_EXTRA_LIBS})
